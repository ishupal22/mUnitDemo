<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="american-flights-api-apikit-test.xml"  />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
	<munit:before-test name="american-flights-api-apikit-testBefore_Test" doc:id="deca5057-59e9-4c4f-b3f1-3368b25a9f79" >
		<munit:set-event doc:name="Set Event" doc:id="e4022e1a-000e-470f-a9a4-f727d8fea12d" >
			<munit:variables >
				<munit:variable key="ID" value="2" />
			</munit:variables>
		</munit:set-event>
	</munit:before-test>
	<munit:test name="get:\flights:american-flights-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\flights:american-flights-api-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="american-flights-api-main" />
            <munit:enable-flow-source value="get:\flights:american-flights-api-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/flights">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":""}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[payload]" is='#[MunitTools::equalTo(readUrl("classpath://scaffolder/response/get_200_flights_application_json.json", "application/json"))]' message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\flights\(ID):american-flights-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\flights\(ID):american-flights-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="american-flights-api-main" />
            <munit:enable-flow-source value="get:\flights\(ID):american-flights-api-config" />
        </munit:enable-flow-sources>
		<munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/flights/$(vars.ID)']">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":""}]</http:headers>
            </http:request>
        </munit:execution>
		<munit:validation>
			<munit-tools:assert-equals doc:name="Assert equals payload " doc:id="5bb74ee8-5781-4805-8a45-d29a02f4a85a" actual="#[payload]" expected='#[{
	"Message" :"Bad"
}]'/>
			<munit-tools:verify-call doc:name="Verify call" doc:id="194b81f4-4f7d-4302-b428-e6032fa70b74" processor="choice" times="0">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Choice" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d143bd5e-87c8-4f8f-8e97-474bc4a770ef" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
        </munit:validation>
    </munit:test>
	<munit:test name="delete:\flights\(ID):american-flights-api-config-200-application\json-FlowTest" description="Verifying functionality of [delete:\flights\(ID):american-flights-api-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="american-flights-api-main" />
            <munit:enable-flow-source value="delete:\flights\(ID):american-flights-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="ID" value="#['null']" doc:name="ID" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="DELETE" path="#['/flights/$(vars.ID)']">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":""}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/delete_200_flights_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\flights:application\json:american-flights-api-config-201-application\json-FlowTest" description="Verifying functionality of [post:\flights:application\json:american-flights-api-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="american-flights-api-main" />
            <munit:enable-flow-source value="post:\flights:application\json:american-flights-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_flights_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/flights">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":"","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_flights_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\flights\(ID):application\json:american-flights-api-config-200-application\json-FlowTest" description="Verifying functionality of [put:\flights\(ID):application\json:american-flights-api-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="american-flights-api-main" />
            <munit:enable-flow-source value="put:\flights\(ID):application\json:american-flights-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_flights_{id}_application_json.json')]" />
            <set-variable variableName="ID" value="#['null']" doc:name="ID" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/flights/$(vars.ID)']">
                <http:headers>#[{"Accept":"application/json","client_secret":"","client_id":"","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_200_flights_{id}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
